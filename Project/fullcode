
#include <LiquidCrystal_I2C.h> // includes the LiquidCrystalI2C Library 
#include <Keypad.h>// includes the Keypad Library 

/*DEFINE PINS*/
#define buzzer A1    //define the pin of buzzer
#define trigPin A2    //define the pin of first ultrasonic
#define echoPin A3   //define the pin of  first ultrasonic
#define trigPin2 10 //define the pin of second ultrasonic
#define echoPin2 11 //define the pin of second ultrasonic
#define pirPin 12  // define the pin of motion sensor
#define redPin 13 // define the pin of red led 
#define yellowPin A0 // define the pin of yellow led

/*DEFINE VARIABLES*/
long duration,duration2; //for ultrasonics
long distance, initialDistance, currentDistance; //for first ultrasonic
long distance2, initialDistance2, currentDistance2; //for second ultrasonic
int i;
int screenOffMsg =0;
int buttonPushCounter = 1;   // counter for the number of button presses
int buttonState = LOW;         // current state of the button
int lastButtonState = LOW;     // previous state of the button
int countdown; //to deactivate and activate
int val ; //pir Pin


/*VARIABLES FOR ALARM SYSTEM*/
String password="1234"; 
String tempPassword;
boolean activated = false; // State of the alarm
boolean activateAlarm = false;
boolean alarmActivated = false;
boolean passChangeMode = false;
boolean passChanged = false;
boolean passEnter=false; 

/*DEFINE KEYPAD*/
const byte ROWS = 4; //four rows
const byte COLS = 4; //four columns1
char keypressed; 

//define the symbols on the buttons of the keypads
char keyMap[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte rowPins[ROWS] = {2,3,4,5}; //Row pinouts of the keypad
byte colPins[COLS] = {6,7,8,9}; //Column pinouts of the keypad
Keypad myKeypad = Keypad( makeKeymap(keyMap), rowPins, colPins, ROWS, COLS); 
/*DEFINE KEYPAD*/


LiquidCrystal_I2C lcd(0x3F,20,4); //LCD address, gotten through library

void setup() {   
  lcd.init();
  lcd.backlight(); 
  Serial.begin(9600); 
  pinMode(buzzer, OUTPUT); // Sets the buzzer as an Output
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  pinMode(trigPin2, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin2, INPUT); // Sets the echoPin as an Input
  pinMode(pirPin, INPUT); // Sets the pirPin as an Input
  pinMode(redPin, OUTPUT); // Sets the redPin as an Output
  pinMode(yellowPin, OUTPUT); // Sets the yellowPin as an Output
}
void loop() {
 
  if (activateAlarm==true) {
  
    lcd.clear(); //clear lcd screen
    lcd.setCursor(0,0); //set the position of lcd
    lcd.print("Alarm will be"); //print on lcd 
    lcd.setCursor(0,1); //set the position
    lcd.print("activated in"); //print on lcd
    int countdown = 9; // 9 seconds count down before activating the alarm
    while (countdown != 0) {   
      lcd.setCursor(13,1); //set the position of countdown
      lcd.print(countdown); //print countdown on screen
      countdown--;
      tone(buzzer, 700, 100); //buzzer sound in every second
      delay(1000);
    }
    lcd.clear(); //clear the screen
    lcd.setCursor(0,0);//set position 
    lcd.print("System is on!");//print
    
     digitalWrite(yellowPin, HIGH);
         delay(1000);


    initialDistance = getDistance(); //calculate the initial distance for entry exit
    initialDistance2 = getDistance2(); //calculate the initial distance for second ultrasonic sensor
    activateAlarm = false; 
    alarmActivated = true;
  }
  if (alarmActivated == true){
      currentDistance = getDistance() +1.0;  //get the current distance for entry exit
      currentDistance2 = getDistance2()+1.0;  //get the current distance for second ultrasonic sensor
      val = digitalRead(pirPin);  //read value from motion sensor
      
if ((currentDistance < initialDistance)){ //countdown begin for entry check if password entered to deactivate
     countdown=9;
     while (countdown != 0) {  
      
      lcd.setCursor(0,0);
      lcd.print("you have 9 sec");
      lcd.setCursor(0,1);
      lcd.print("to deactivate");
      lcd.setCursor(9,0);
      lcd.print(countdown);
      countdown--;
      tone(buzzer,700,100);
      delay(1000);
      checkPassword(); // go to check password this my entry area
       digitalWrite(yellowPin, LOW);
         delay(1000);
       if(countdown==0&& alarmActivated==true){ //if password not entered alarm goes off
         digitalWrite(yellowPin, LOW);
         delay(1000);
         tone(buzzer,1000);
         digitalWrite(redPin, HIGH);
         delay(1000);
         enterPassword();
         digitalWrite(redPin, LOW);
         delay(1000);
        
        }
     
       
     }

}
      else if((val==HIGH)){
         digitalWrite(yellowPin, LOW);
         delay(1000);
        tone(buzzer,1000);
        digitalWrite(redPin, HIGH);
         delay(1000);
        lcd.clear();
       
         enterPassword();
                digitalWrite(redPin, LOW);
         delay(1000);
       
       }
        else if((currentDistance2 < initialDistance2)){
         digitalWrite(yellowPin, LOW);
         delay(1000);
        tone(buzzer,1000);
        
               digitalWrite(redPin, HIGH);
         delay(1000);
        lcd.clear();
       
         enterPassword();
                 digitalWrite(redPin, LOW);
         delay(1000);
        
       }
    }
  if (alarmActivated==false) {
    if (screenOffMsg == 0 ){
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("A-Activate");
      lcd.setCursor(0,1);
      lcd.print("B-Change Pass");
      screenOffMsg = 1;
    }
    keypressed = myKeypad.getKey();
     if (keypressed =='A'){        //If A is pressed, activate the alarm
      tone(buzzer, 1000, 200);
      activateAlarm = true;            
    }
    else if (keypressed =='B') {     //if B is pressed then the change password process starts 
      lcd.clear();
      int i=1;
      tone(buzzer, 2000, 100);
      tempPassword = ""; 
      lcd.setCursor(0,0);
      lcd.print("Current Password"); //current password is printed on LCD
      lcd.setCursor(0,1);
      lcd.print(">");
      passChangeMode = true;
      passChanged = true;   
      while(passChanged) {      
      keypressed = myKeypad.getKey();
      if (keypressed != NO_KEY){
        if (keypressed == '0' || keypressed == '1' || keypressed == '2' || keypressed == '3' ||
            keypressed == '4' || keypressed == '5' || keypressed == '6' || keypressed == '7' ||
            keypressed == '8' || keypressed == '9' ) {
         tempPassword += keypressed;
         lcd.setCursor(i,1);
         lcd.print("*");
         i++;
         tone(buzzer, 2000, 100);
        }
      }
      if (i > 5 || keypressed == '#') {     // if buttons pressed is more than 5 or # is pressed the screen resets
        tempPassword = "";
        i=1;
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print("Current Password");
        lcd.setCursor(0,1);
        lcd.print(">"); 
      }
      if ( keypressed == '*') {
        i=1;
        tone(buzzer, 2000, 100);
        if (password == tempPassword) {
          tempPassword="";
          lcd.clear();
          lcd.setCursor(0,0);
          lcd.print("Set New Password");
          lcd.setCursor(0,1);
          lcd.print(">");
          while(passChangeMode) {
            keypressed = myKeypad.getKey();
            if (keypressed != NO_KEY){
              if (keypressed == '0' || keypressed == '1' || keypressed == '2' || keypressed == '3' ||
                  keypressed == '4' || keypressed == '5' || keypressed == '6' || keypressed == '7' ||
                  keypressed == '8' || keypressed == '9' ) {
                tempPassword += keypressed;
                lcd.setCursor(i,1);
                lcd.print("*");
                i++;
                tone(buzzer, 2000, 100);
              }
            }
            if (i > 5 || keypressed == '#') {
              tempPassword = "";
              i=1;
              tone(buzzer, 2000, 100);
              lcd.clear();
              lcd.setCursor(0,0);
              lcd.print("Set New Password");
              lcd.setCursor(0,1);
              lcd.print(">");
            }
            if ( keypressed == '*') {
              i=1;
              tone(buzzer, 2000, 100);
              password = tempPassword;
              passChangeMode = false;
              passChanged = false;
              screenOffMsg = 0;
            }            
          }
        }
      }
    }
   }
 }
}
void enterPassword() {
  int k=5;
  tempPassword = "";
  activated = true;
  passEnter=true;
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print(" *** ALARM *** ");
  lcd.setCursor(0,1);
  lcd.print("Pass>");
      while(activated) {
      keypressed = myKeypad.getKey();         //while alarm is activated checking which keypressed
      if (keypressed != NO_KEY){
        if (keypressed == '0' || keypressed == '1' || keypressed == '2' || keypressed == '3' ||
            keypressed == '4' || keypressed == '5' || keypressed == '6' || keypressed == '7' ||
            keypressed == '8' || keypressed == '9' ) {
          tempPassword += keypressed;
          lcd.setCursor(k,1);
          lcd.print("*");
          k++;
        }
      }
      if (k > 9 || keypressed == '#'){// if # is pressed or the number of buttons pressed is greater then 9 then the screen resets
        tempPassword = "";
        k=5;
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print(" *** ALARM *** ");
        lcd.setCursor(0,1);
        lcd.print("Pass>");
      }
      if ( keypressed == '*') { // * is entered at the end of the password to check if its the correct one 
        if ( tempPassword == password ) {
          activated = false;
          alarmActivated = false;
          noTone(buzzer);
          screenOffMsg = 0; 
        }
        else if (tempPassword != password) {
          lcd.setCursor(0,1);
          lcd.print("Wrong! Try Again");
          delay(2000);
          lcd.clear();
          lcd.setCursor(0,0);
          lcd.print(" *** ALARM *** ");
          lcd.setCursor(0,1);
          lcd.print("Pass>");
         }
      }    
   }
}
// Custom function for the Ultrasonic sensor
long getDistance(){
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2000);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPinreturns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = microsecondsToCentimeters(duration);
  Serial.println("distance "+distance);
  return distance;
}
long microsecondsToCentimeters(long microseconds) {
  // The speed of sound is 340 m/s or 29 microseconds per centimeter.
  // The ping travels out and back, so to find the distance of the
  // object we take half of the distance travelled.
  return microseconds / 29 / 2;
}
long getDistance2(){
  // Clears the trigPin
  digitalWrite(trigPin2, LOW);
  delayMicroseconds(2000);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin2, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin2, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration2 = pulseIn(echoPin2, HIGH);
  // Calculating the distance
  distance2 = microsecondsToCentimeters(duration2);
   Serial.println(distance);
  return distance2;
}
int checkPassword(){
  keypressed = myKeypad.getKey();
  if(keypressed=='C'){
  int k=5;
  String passwordDeactive="0852";
  tempPassword = "";
  activated = true;
  passEnter=true;
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print(" *** ALARM *** ");
  lcd.setCursor(0,1);
  lcd.print("Pass>");
      while(activated) {
      keypressed = myKeypad.getKey();
      if (keypressed != NO_KEY){
        if (keypressed == '0' || keypressed == '1' || keypressed == '2' || keypressed == '3' ||
            keypressed == '4' || keypressed == '5' || keypressed == '6' || keypressed == '7' ||
            keypressed == '8' || keypressed == '9' ) {
          tempPassword += keypressed;
          lcd.setCursor(k,1);
          lcd.print("*");
          k++;
        }
      }
      if (k > 9 || keypressed == '#') {
        tempPassword = "";
        k=5;
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print(" *** ALARM *** ");
        lcd.setCursor(0,1);
        lcd.print("Pass>");
      }
      if ( keypressed == '*') {
        if ( tempPassword == passwordDeactive ) {
          activated = false;
          alarmActivated = false;
          noTone(buzzer);
          screenOffMsg = 0; 
          countdown=0;
        }
        if (tempPassword !=passwordDeactive) {
          
          countdown=0;
          tone(buzzer,700, 100); // Send 1KHz sound signal 
          lcd.clear();
        enterPassword();
        }
      }    
    } 
  }
  return countdown;  
}

